{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotEnough",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__WithdrawFailed",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "funderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct FundMe.Funder",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xe2b94a51b984b87d947313fc7206fe2192d8d92080958b28f6a6a60c2aeb6b00",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "624098",
    "logsBloom": "0x
    "blockHash": "0x9e97d5f24800a7fe3f2e2b62bbbbbad2f6c68be667ef950fc39ec1a059c7a31c",
    "transactionHash": "0xe2b94a51b984b87d947313fc7206fe2192d8d92080958b28f6a6a60c2aeb6b00",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "624098",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "7f5b0b920e2bc1188a72f4c8ed03a893",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotEnough\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__WithdrawFailed\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"funderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct FundMe.Funder\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Adam Sobieski\",\"details\":\"This uses PriceConverter library to perform ETH => USD conversion\",\"kind\":\"dev\",\"methods\":{\"getFunder(uint256)\":{\"params\":{\"_index\":\"Index of a funder\"},\"returns\":{\"_0\":\"Funder\"}},\"getPriceFeed()\":{\"returns\":{\"_0\":\"AggregatorV3Interface price feed\"}}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"},\"getFunder(uint256)\":{\"notice\":\"This function retrieves a funder at a given index\"},\"getPriceFeed()\":{\"notice\":\"This function retrieves a price feed\"},\"withdraw()\":{\"notice\":\"This function withdraws funds, transferring them to the owner's account\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\nerror FundMe__NotEnough();\\nerror FundMe__WithdrawFailed();\\n\\n/** @title A contract for crowd funding\\n * @author Adam Sobieski\\n * @notice This contract is to demo a sample funding contract\\n * @dev This uses PriceConverter library to perform ETH => USD conversion\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    struct Funder {\\n        address funderAddress;\\n        uint256 value;\\n    }\\n\\n    uint256 public constant MIN_USD = 50 * 1e18;\\n    Funder[] private s_funders;\\n    address private immutable i_owner;\\n    AggregatorV3Interface private immutable i_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address _priceFeedAddress) {\\n        i_owner = msg.sender;\\n        i_priceFeed = AggregatorV3Interface(_priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     * @notice This function funds this contract\\n     */\\n    function fund() public payable {\\n        if (msg.value.convertEthToUsd(i_priceFeed) < MIN_USD) {\\n            revert FundMe__NotEnough();\\n        }\\n        s_funders.push(Funder(msg.sender, msg.value));\\n    }\\n\\n    /**\\n     * @notice This function withdraws funds, transferring them to the owner's account\\n     */\\n    function withdraw() public onlyOwner {\\n        clearFunders();\\n        (bool callSuccess /*, bytes memory dataReturned*/, ) = payable(\\n            msg.sender\\n        ).call{value: address(this).balance}(\\\"\\\"); //if fails - returns false\\n        if (!callSuccess) {\\n            revert FundMe__WithdrawFailed();\\n        }\\n    }\\n\\n    /**\\n     * @notice This function clears the array of founders when the withdrawal is performed\\n     */\\n    function clearFunders() private {\\n        delete s_funders;\\n    }\\n\\n    /**\\n     * @notice This function retrieves a funder at a given index\\n     * @param _index Index of a funder\\n     * @return Funder\\n     */\\n    function getFunder(uint256 _index) public view returns (Funder memory) {\\n        return s_funders[_index];\\n    }\\n\\n    /**\\n     * @notice This function retrieves a price feed\\n     * @return AggregatorV3Interface price feed\\n     */\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return i_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x7f4029494af09cab539cf32a476b729c23270f06aafb6274f195eeadb696d35a\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n/** @title A library that provides the ETH => USD conversion feature\\n * @author Adam Sobieski\\n * @notice This is to facilitate FundMe contract\\n * @dev This implements a price feed as a library\\n */\\nlibrary PriceConverter {\\n    /**\\n     * @notice This function returns the latest ETH/USD price\\n     * @param _priceFeed Price feed interface\\n     * @return Latest ETH/USD price\\n     */\\n    function getPrice(\\n        AggregatorV3Interface _priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 price, , , ) = _priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    /**\\n     * @notice This function performs the price conversion from ETH to USD\\n     * @param _ethAmount Value in ETH\\n     * @param _priceFeed Price feed interface\\n     * @return Value in USD\\n     */\\n    function convertEthToUsd(\\n        uint256 _ethAmount,\\n        AggregatorV3Interface _priceFeed\\n    ) internal view returns (uint256) {\\n        return (_ethAmount * getPrice(_priceFeed)) / 1e18;\\n    }\\n}\\n\",\"keccak256\":\"0x0228d90bea1e2c1ac95539dbfb083c52e31e7966f52681b490109932e188421b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b50604051610ba8380380610ba883398181016040528101906100329190610103565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505050610130565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d0826100a5565b9050919050565b6100e0816100c5565b81146100eb57600080fd5b50565b6000815190506100fd816100d7565b92915050565b600060208284031215610119576101186100a0565b5b6000610127848285016100ee565b91505092915050565b60805160a051610a4c61015c6000396000818161012a015261037f0152600061024a0152610a4c6000f3fe60806040526004361061004e5760003560e01c8063213dbea2146100675780633ccfd60b146100925780639e87a5cd146100a9578063b60d4288146100d4578063d7b4750c146100de5761005d565b3661005d5761005b61011b565b005b61006561011b565b005b34801561007357600080fd5b5061007c61023b565b60405161008991906105c3565b60405180910390f35b34801561009e57600080fd5b506100a7610248565b005b3480156100b557600080fd5b506100be61037b565b6040516100cb919061065d565b60405180910390f35b6100dc61011b565b005b3480156100ea57600080fd5b50610105600480360381019061010091906106a9565b6103a3565b6040516101129190610735565b60405180910390f35b6802b5e3af16b18800006101587f00000000000000000000000000000000000000000000000000000000000000003461043f90919063ffffffff16565b1015610190576040517f6522a54f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200134815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101555050565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102cd576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102d5610470565b60003373ffffffffffffffffffffffffffffffffffffffff16476040516102fb90610781565b60006040518083038185875af1925050503d8060008114610338576040519150601f19603f3d011682016040523d82523d6000602084013e61033d565b606091505b5050905080610378576040517ff02e6d3000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6103ab610510565b600082815481106103bf576103be610796565b5b90600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250509050919050565b6000670de0b6b3a76400006104538361047f565b8461045e91906107f4565b6104689190610865565b905092915050565b60008061047d9190610540565b565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156104cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f19190610923565b5050509150506402540be40081610508919061099e565b915050919050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b50805460008255600202906000526020600020908101906105619190610564565b50565b5b808211156105a657600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550600201610565565b5090565b6000819050919050565b6105bd816105aa565b82525050565b60006020820190506105d860008301846105b4565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061062361061e610619846105de565b6105fe565b6105de565b9050919050565b600061063582610608565b9050919050565b60006106478261062a565b9050919050565b6106578161063c565b82525050565b6000602082019050610672600083018461064e565b92915050565b600080fd5b610686816105aa565b811461069157600080fd5b50565b6000813590506106a38161067d565b92915050565b6000602082840312156106bf576106be610678565b5b60006106cd84828501610694565b91505092915050565b60006106e1826105de565b9050919050565b6106f1816106d6565b82525050565b610700816105aa565b82525050565b60408201600082015161071c60008501826106e8565b50602082015161072f60208501826106f7565b50505050565b600060408201905061074a6000830184610706565b92915050565b600081905092915050565b50565b600061076b600083610750565b91506107768261075b565b600082019050919050565b600061078c8261075e565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107ff826105aa565b915061080a836105aa565b9250828202610818816105aa565b9150828204841483151761082f5761082e6107c5565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610870826105aa565b915061087b836105aa565b92508261088b5761088a610836565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6108b581610896565b81146108c057600080fd5b50565b6000815190506108d2816108ac565b92915050565b6000819050919050565b6108eb816108d8565b81146108f657600080fd5b50565b600081519050610908816108e2565b92915050565b60008151905061091d8161067d565b92915050565b600080600080600060a0868803121561093f5761093e610678565b5b600061094d888289016108c3565b955050602061095e888289016108f9565b945050604061096f8882890161090e565b93505060606109808882890161090e565b9250506080610991888289016108c3565b9150509295509295909350565b60006109a9826108d8565b91506109b4836108d8565b92508282026109c2816108d8565b91507f800000000000000000000000000000000000000000000000000000000000000084146000841216156109fa576109f96107c5565b5b8282058414831517610a0f57610a0e6107c5565b5b509291505056fea264697066735822122060c661fbe5dfe35b7788acebad42ccf1903c450b2b51aa2a8563b1da994f4e5564736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c8063213dbea2146100675780633ccfd60b146100925780639e87a5cd146100a9578063b60d4288146100d4578063d7b4750c146100de5761005d565b3661005d5761005b61011b565b005b61006561011b565b005b34801561007357600080fd5b5061007c61023b565b60405161008991906105c3565b60405180910390f35b34801561009e57600080fd5b506100a7610248565b005b3480156100b557600080fd5b506100be61037b565b6040516100cb919061065d565b60405180910390f35b6100dc61011b565b005b3480156100ea57600080fd5b50610105600480360381019061010091906106a9565b6103a3565b6040516101129190610735565b60405180910390f35b6802b5e3af16b18800006101587f00000000000000000000000000000000000000000000000000000000000000003461043f90919063ffffffff16565b1015610190576040517f6522a54f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200134815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101555050565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102cd576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102d5610470565b60003373ffffffffffffffffffffffffffffffffffffffff16476040516102fb90610781565b60006040518083038185875af1925050503d8060008114610338576040519150601f19603f3d011682016040523d82523d6000602084013e61033d565b606091505b5050905080610378576040517ff02e6d3000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6103ab610510565b600082815481106103bf576103be610796565b5b90600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250509050919050565b6000670de0b6b3a76400006104538361047f565b8461045e91906107f4565b6104689190610865565b905092915050565b60008061047d9190610540565b565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156104cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f19190610923565b5050509150506402540be40081610508919061099e565b915050919050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b50805460008255600202906000526020600020908101906105619190610564565b50565b5b808211156105a657600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550600201610565565b5090565b6000819050919050565b6105bd816105aa565b82525050565b60006020820190506105d860008301846105b4565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061062361061e610619846105de565b6105fe565b6105de565b9050919050565b600061063582610608565b9050919050565b60006106478261062a565b9050919050565b6106578161063c565b82525050565b6000602082019050610672600083018461064e565b92915050565b600080fd5b610686816105aa565b811461069157600080fd5b50565b6000813590506106a38161067d565b92915050565b6000602082840312156106bf576106be610678565b5b60006106cd84828501610694565b91505092915050565b60006106e1826105de565b9050919050565b6106f1816106d6565b82525050565b610700816105aa565b82525050565b60408201600082015161071c60008501826106e8565b50602082015161072f60208501826106f7565b50505050565b600060408201905061074a6000830184610706565b92915050565b600081905092915050565b50565b600061076b600083610750565b91506107768261075b565b600082019050919050565b600061078c8261075e565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107ff826105aa565b915061080a836105aa565b9250828202610818816105aa565b9150828204841483151761082f5761082e6107c5565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610870826105aa565b915061087b836105aa565b92508261088b5761088a610836565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6108b581610896565b81146108c057600080fd5b50565b6000815190506108d2816108ac565b92915050565b6000819050919050565b6108eb816108d8565b81146108f657600080fd5b50565b600081519050610908816108e2565b92915050565b60008151905061091d8161067d565b92915050565b600080600080600060a0868803121561093f5761093e610678565b5b600061094d888289016108c3565b955050602061095e888289016108f9565b945050604061096f8882890161090e565b93505060606109808882890161090e565b9250506080610991888289016108c3565b9150509295509295909350565b60006109a9826108d8565b91506109b4836108d8565b92508282026109c2816108d8565b91507f800000000000000000000000000000000000000000000000000000000000000084146000841216156109fa576109f96107c5565b5b8282058414831517610a0f57610a0e6107c5565b5b509291505056fea264697066735822122060c661fbe5dfe35b7788acebad42ccf1903c450b2b51aa2a8563b1da994f4e5564736f6c63430008110033",
  "devdoc": {
    "author": "Adam Sobieski",
    "details": "This uses PriceConverter library to perform ETH => USD conversion",
    "kind": "dev",
    "methods": {
      "getFunder(uint256)": {
        "params": {
          "_index": "Index of a funder"
        },
        "returns": {
          "_0": "Funder"
        }
      },
      "getPriceFeed()": {
        "returns": {
          "_0": "AggregatorV3Interface price feed"
        }
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      },
      "getFunder(uint256)": {
        "notice": "This function retrieves a funder at a given index"
      },
      "getPriceFeed()": {
        "notice": "This function retrieves a price feed"
      },
      "withdraw()": {
        "notice": "This function withdraws funds, transferring them to the owner's account"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(Funder)64_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Funder)64_storage)dyn_storage": {
        "base": "t_struct(Funder)64_storage",
        "encoding": "dynamic_array",
        "label": "struct FundMe.Funder[]",
        "numberOfBytes": "32"
      },
      "t_struct(Funder)64_storage": {
        "encoding": "inplace",
        "label": "struct FundMe.Funder",
        "members": [
          {
            "astId": 61,
            "contract": "contracts/FundMe.sol:FundMe",
            "label": "funderAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 63,
            "contract": "contracts/FundMe.sol:FundMe",
            "label": "value",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}